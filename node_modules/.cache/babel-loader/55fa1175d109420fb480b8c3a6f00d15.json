{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kuntal\\\\Client\\\\FujiFilm\\\\frontend\\\\customerlogin\\\\src\\\\component\\\\Login.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super();\n    this.props = props;\n    this.state = {\n      response: new Object()\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n\n    if (username != '' && password != '') {\n      var obj = {\n        userName: username,\n        password: password\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      };\n      /*fetch('http://localhost:8080/token', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          this.setState({ response: data});                \r\n      });*/\n\n      fetch('http://localhost:8080/token', requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = data && data.message || response.status;\n          return Promise.reject(error);\n        }\n\n        this.setState({\n          postId: data.id\n        });\n      }).catch(error => {\n        // this.setState({ errorMessage: error.toString() });\n        alert('There was an error!', error);\n      });\n    } else {\n      alert(\"Empty\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Fuji Films Customer Login page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"UserName :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Password :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  width: '100%'\n                },\n                onClick: this.onSubmit,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: JSON.stringify(this.state.response)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/Kuntal/Client/FujiFilm/frontend/customerlogin/src/component/Login.js"],"names":["React","Login","Component","constructor","props","state","response","Object","onSubmit","bind","username","document","getElementById","value","password","obj","userName","requestOptions","method","headers","body","JSON","stringify","fetch","then","isJson","get","includes","data","json","ok","error","message","status","Promise","reject","setState","postId","id","catch","alert","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nclass Login extends  React.Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.props = props;\r\n        this.state = {\r\n            response : new Object()\r\n        };\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n    }\r\n    onSubmit(){\r\n        var username = document.getElementById(\"username\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n        if(username!='' && password!=''){\r\n            var obj = {\r\n                userName : username,\r\n                password : password  \r\n            };\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(obj)\r\n            };\r\n            /*fetch('http://localhost:8080/token', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ response: data});                \r\n            });*/\r\n            fetch('http://localhost:8080/token', requestOptions)\r\n            .then(async response => {\r\n                const isJson = response.headers.get('content-type')?.includes('application/json');\r\n                const data = isJson && await response.json();\r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n    \r\n                this.setState({ postId: data.id })\r\n            })\r\n            .catch(error => {\r\n               // this.setState({ errorMessage: error.toString() });\r\n                alert('There was an error!', error);\r\n            });\r\n        }else{\r\n            alert(\"Empty\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n            <center>\r\n              <h2>Fuji Films Customer Login page</h2>\r\n              <table border=\"1\">\r\n                  <tr>\r\n                      <td>\r\n                          UserName : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"text\" id=\"username\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>\r\n                          Password : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"password\" id=\"password\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td colSpan=\"2\">\r\n                          <button style={{width : '100%'}} onClick={this.onSubmit}>Login</button>\r\n                      </td>\r\n                  </tr>\r\n              </table>\r\n              <p>{JSON.stringify(this.state.response)}</p>\r\n              </center>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}