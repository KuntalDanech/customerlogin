{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kuntal\\\\Client\\\\FujiFilm\\\\frontend\\\\customerlogin\\\\src\\\\component\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [response, setRespoonse] = useState();\n\n  function onSubmit() {\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n\n    if (username != '' && password != '') {\n      var obj = {\n        userName: username,\n        password: password\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      };\n      /*fetch('http://localhost:8080/token', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          this.setState({ response: data});                \r\n      });*/\n\n      fetch('http://localhost:8080/token', requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = data && data.message || response.status;\n          return Promise.reject(error);\n        }\n\n        alert(\"sucess :: \" + data.token);\n        setToken(data.token);\n        setRespoonse(data.token); //this.setState({ postId: data.id })\n      }).catch(error => {\n        // this.setState({ errorMessage: error.toString() });\n        alert('There was an error!', error);\n      });\n    } else {\n      alert(\"Empty\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fuji Films Customer Login page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"UserName :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '100%'\n              },\n              onClick: onSubmit,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(response)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Login, \"8h8//8zRsZ6Ii+0jDVAfGpNHGwM=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Kuntal/Client/FujiFilm/frontend/customerlogin/src/component/Login.js"],"names":["React","useState","PropTypes","Login","setToken","response","setRespoonse","onSubmit","username","document","getElementById","value","password","obj","userName","requestOptions","method","headers","body","JSON","stringify","fetch","then","isJson","get","includes","data","json","ok","error","message","status","Promise","reject","alert","token","catch","width","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Login({ setToken }) {\r\n    \r\n    const [response, setRespoonse] = useState();\r\n\r\n    function onSubmit(){\r\n        var username = document.getElementById(\"username\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n        if(username!='' && password!=''){\r\n            var obj = {\r\n                userName : username,\r\n                password : password  \r\n            };\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(obj)\r\n            };\r\n            /*fetch('http://localhost:8080/token', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ response: data});                \r\n            });*/\r\n            fetch('http://localhost:8080/token', requestOptions)\r\n            .then(async response => {\r\n                const isJson = response.headers.get('content-type')?.includes('application/json');\r\n                const data = isJson && await response.json();\r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                    alert(\"sucess :: \"+data.token);\r\n                    setToken(data.token);\r\n                    setRespoonse(data.token);\r\n                //this.setState({ postId: data.id })\r\n            })\r\n            .catch(error => {\r\n               // this.setState({ errorMessage: error.toString() });\r\n                alert('There was an error!', error);\r\n            });\r\n        }else{\r\n            alert(\"Empty\");\r\n        }\r\n    }\r\n        return (\r\n           <div>\r\n            <center>\r\n              <h2>Fuji Films Customer Login page</h2>\r\n              <table border=\"1\">\r\n                  <tr>\r\n                      <td>\r\n                          UserName : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"text\" id=\"username\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>\r\n                          Password : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"password\" id=\"password\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td colSpan=\"2\">\r\n                          <button style={{width : '100%'}} onClick={onSubmit}>Login</button>\r\n                      </td>\r\n                  </tr>\r\n              </table>\r\n              <p>{JSON.stringify(response)}</p>\r\n              </center>\r\n           </div>\r\n        );\r\n}\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}