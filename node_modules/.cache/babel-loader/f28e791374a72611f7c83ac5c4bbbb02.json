{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token'); // It is used to decode string to Json object\n\n    console.log(tokenString);\n\n    if (tokenString == null) {\n      return null;\n    }\n\n    return userToken == null ? null : userToken;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    if (typeof userToken != 'undefined' && userToken != null) {\n      localStorage.setItem('token', userToken);\n      setToken(userToken);\n    } else {\n      setToken(null);\n    }\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["D:/Kuntal/Client/FujiFilm/frontend/customerlogin/src/component/UseToken.js"],"names":["useState","useToken","getToken","tokenString","localStorage","getItem","console","log","userToken","token","setToken","saveToken","setItem"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,CADmB,CAEnB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AACA,QAAGA,WAAW,IAAE,IAAhB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,WAAOK,SAAS,IAAE,IAAX,GAAgB,IAAhB,GAAqBA,SAA5B;AACD,GARH;;AASF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACE,QAAQ,EAAT,CAAlC;;AACA,QAAMS,SAAS,GAAGH,SAAS,IAAI;AAC7B,QAAG,OAAOA,SAAP,IAAmB,WAAnB,IAAkCA,SAAS,IAAE,IAAhD,EAAqD;AACnDJ,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BJ,SAA9B;AACAE,MAAAA,QAAQ,CAACF,SAAD,CAAR;AACD,KAHD,MAGK;AACHE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAPD;;AAQA,SAAO;AACLA,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA;AAFK,GAAP;AAID;;GAvBuBR,Q","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = localStorage.getItem('token');\r\n        // It is used to decode string to Json object\r\n        console.log(tokenString);\r\n        if(tokenString==null){\r\n          return null;\r\n        }\r\n        return userToken==null?null:userToken\r\n      };\r\n  const [token, setToken] = useState(getToken());\r\n  const saveToken = userToken => {\r\n    if(typeof(userToken)!='undefined' && userToken!=null){\r\n      localStorage.setItem('token', userToken);\r\n      setToken(userToken);\r\n    }else{\r\n      setToken(null);\r\n    }\r\n  };\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}