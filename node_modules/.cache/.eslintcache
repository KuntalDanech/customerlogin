[{"D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\index.js":"1","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\App.js":"2","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\reportWebVitals.js":"3","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\Login.js":"4","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\UseToken.js":"5","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\MyAccountsApp.js":"6","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\ElogApps.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":3260,"mtime":1621939448520,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3074,"mtime":1621928138727,"results":"12","hashOfConfig":"9"},{"size":708,"mtime":1621928267121,"results":"13","hashOfConfig":"9"},{"size":1249,"mtime":1621938219109,"results":"14","hashOfConfig":"9"},{"size":778,"mtime":1621934283397,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1fn2yoz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\index.js",[],["34","35"],"D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\App.js",["36","37","38"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './component/Login';\nimport useToken from './component/UseToken';\nimport MyAccountsApp from './component/MyAccountsApp';\nimport ElogApps from './component/ElogApps';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(token==null) {\n    return(   \n      <div>   \n      <Router>\n    <Switch> \n    <Route exact path='*' render={(props) => <Login setToken={setToken} {...props} /> } />\n    </Switch>\n    </Router>\n    </div>\n    );\n  }\n\n  function logOut(){\n    localStorage.removeItem(\"token\");\n    setToken(null);\n  }\n\n  function myAccountAppRedirect(){\n    var token = localStorage.getItem(\"token\");\n    if(token!=null){\n        console.log(\"Got :: \"+token);\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Authorization': token },\n        };\n        fetch('http://localhost:8081/myaccountapp/redirect', requestOptions)\n        .then(async response => {\n            if (response.ok) {\n                alert(response);\n                //<Redirect to=\"https://myaccount-fbau.fujifilm.com/myaccount/\"/>\n                window.location.href=\"https://myaccount-fbau.fujifilm.com/myaccount/\";\n            }\n        }).catch(error => {\n            // this.setState({ errorMessage: error.toString() });\n             alert('There was an error!', error);\n         });\n    }\n  }\n  function eLogAppRedirect(){\n    var token = localStorage.getItem(\"token\");\n    if(token!=null){\n        console.log(\"Got :: \"+token);\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Authorization': token },\n        };\n        fetch('http://localhost:8082/elog/redirect', requestOptions)\n        .then(async response => {\n            if (response.ok) {\n                alert(response);\n                //<Redirect to=\"https://myaccount-fbau.fujifilm.com/myaccount/\"/>\n                window.location.href=\"https://elog-fbau.fujifilm.com/elog/login.do\";\n            }\n        }).catch(error => {\n            // this.setState({ errorMessage: error.toString() });\n             alert('There was an error!', error);\n         });\n    }\n  }\n\n  return (\n    <div>\n      <center>\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <be/>\n            <h1>Welcome to Fuji Films Apps Single Sing On</h1>\n        <table border=\"2\">\n          <tr>\n          <th colSpan=\"2\">Welcome to the FujiFilms Microservices</th>\n          </tr>\n          <tr>\n            <td>\n              1. <Link onClick={myAccountAppRedirect} to=\"/\">Click Here</Link> to Go to MyAccount App\n            </td>\n          </tr>\n          <tr>\n          <td>\n              2. <Link onClick={eLogAppRedirect} to=\"/\">Click Here</Link> to Go to Elog App\n            </td>\n          </tr>\n          <tr>\n          <td>\n              <button style={{width : '100%'}} onClick={logOut}>Logout</button>\n            </td>\n          </tr>\n        </table>\n      </Route>\n      </Switch>\n      </Router>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\reportWebVitals.js",[],"D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\Login.js",["39","40"],"import React from 'react';\r\nimport {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Login({ setToken }) {\r\n    \r\n    const [response, setRespoonse] = useState();\r\n\r\n    function onSubmit(){\r\n        var username = document.getElementById(\"username\").value;\r\n        var password = document.getElementById(\"password\").value;\r\n        if(username!='' && password!=''){\r\n            var obj = {\r\n                userName : username,\r\n                password : password  \r\n            };\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(obj)\r\n            };\r\n            /*fetch('http://localhost:8080/token', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ response: data});                \r\n            });*/\r\n            fetch('http://localhost:8080/token', requestOptions)\r\n            .then(async response => {\r\n                const isJson = response.headers.get('content-type')?.includes('application/json');\r\n                const data = isJson && await response.json();\r\n    \r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                    alert(\"sucess :: \"+data.token);\r\n                    setToken(data.token);\r\n                    setRespoonse(data.token);\r\n                //this.setState({ postId: data.id })\r\n            })\r\n            .catch(error => {\r\n               // this.setState({ errorMessage: error.toString() });\r\n                alert('There was an error!', error);\r\n            });\r\n        }else{\r\n            alert(\"Empty\");\r\n        }\r\n    }\r\n        return (\r\n           <div>\r\n            <center>\r\n              <h2>Fuji Films Customer Login page</h2>\r\n              <table border=\"1\">\r\n                  <tr>\r\n                      <td>\r\n                          UserName : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"text\" id=\"username\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>\r\n                          Password : \r\n                      </td>\r\n                      <td>\r\n                          <input type=\"password\" id=\"password\" />\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td colSpan=\"2\">\r\n                          <button style={{width : '100%'}} onClick={onSubmit}>Login</button>\r\n                      </td>\r\n                  </tr>\r\n              </table>\r\n              <p>{JSON.stringify(response)}</p>\r\n              </center>\r\n           </div>\r\n        );\r\n}\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\UseToken.js",[],"D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\MyAccountsApp.js",["41"],"import React from 'react'\r\nimport { Redirect } from 'react-router';\r\nclass MyAccountsApp extends React.Component{\r\n\r\n    constructor(props){\r\n        super();\r\n    }\r\n    componentDidMount(){\r\n        var token = localStorage.getItem(\"token\");\r\n        if(token!=null){\r\n            console.log(\"Got :: \"+token);\r\n            // Simple POST request with a JSON body using fetch\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Authorization': token },\r\n            };\r\n            fetch('http://localhost:8081/myaccountapp/redirect', requestOptions)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    alert(response);\r\n                    //<Redirect to=\"https://myaccount-fbau.fujifilm.com/myaccount/\"/>\r\n                    window.location.href=\"https://myaccount-fbau.fujifilm.com/myaccount/\";\r\n                }\r\n            }).catch(error => {\r\n                // this.setState({ errorMessage: error.toString() });\r\n                 alert('There was an error!', error);\r\n             });\r\n        }\r\n    }\r\n    render(){\r\n        return <div>\r\n            <h1>Welcome to MyAccounts App</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default MyAccountsApp","D:\\Kuntal\\Client\\FujiFilm\\frontend\\customerlogin\\src\\component\\ElogApps.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":21},{"ruleId":"46","severity":1,"message":"51","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":12,"column":20,"nodeType":"54","messageId":"55","endLine":12,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":12,"column":36,"nodeType":"54","messageId":"55","endLine":12,"endColumn":38},{"ruleId":"46","severity":1,"message":"56","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MyAccountsApp' is defined but never used.","'ElogApps' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]